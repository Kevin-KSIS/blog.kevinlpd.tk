<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CTF on Kevinlpd security blog</title>
    <link>https://blog.kevsecurity.org/tags/ctf/</link>
    <description>Recent content in CTF on Kevinlpd security blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © Kev</copyright>
    <lastBuildDate>Tue, 20 Nov 2018 22:09:39 -0500</lastBuildDate>
    
        <atom:link href="https://blog.kevsecurity.org/tags/ctf/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SVATTT final 2018 - roundcube mail</title>
      <link>https://blog.kevsecurity.org/post/svattt_final_2018_web_2_roundcube_mail/</link>
      <pubDate>Tue, 20 Nov 2018 22:09:39 -0500</pubDate>
      
      <guid>https://blog.kevsecurity.org/post/svattt_final_2018_web_2_roundcube_mail/</guid>
      <description>Mô tả  Roundcube 1.0.5 có 3 lỗi
Tài khoản: guest/guest
Thư mục web /opt/lampp/htdocs
Source: part1, part2
 Ý tưởng  Lỗi 1: CVE-2015-8794
Lỗi 2: PHP Object Injection (cách 2 - cách noob )
Lỗi 3: Đăng nhập admin
 Tâm tư của tác giả Mặc dù theo dòng sự kiện scandal đang nóng hỏi trên facebook nhưng bài này chỉ nói về kỹ thuật không có kích động thù địch gì cả.</description>
    </item>
    
    <item>
      <title>SVATTT 2018 - Secure document service</title>
      <link>https://blog.kevsecurity.org/post/svattt_2018_web_3_secure_document_service/</link>
      <pubDate>Mon, 05 Nov 2018 15:37:42 +0700</pubDate>
      
      <guid>https://blog.kevsecurity.org/post/svattt_2018_web_3_secure_document_service/</guid>
      <description>Mô tả  1000 points (1&amp;frasl;68 sovles)
I made a simple and secure web service for upload and share document. Can you read document to get a gift? :D
http://171.244.141.213:8337/
 Gợi ý  1.Flag in /tmp/fl4g.php
2.Wrapper
3.https://pastebin.com/g6XSfVfB
 Ý tưởng  Tìm cách đăng nhập admin bằng&amp;hellip; googling .
Upload file docx chứa mã độc (shell) và gọi ra bằng wrapper zip:// qua LFI.
Dùng symlink để bypass filter và đọc flag.</description>
    </item>
    
    <item>
      <title>Matesctf final 2 - Brute mongodb _id</title>
      <link>https://blog.kevsecurity.org/post/matesctf-final-2-brute-mongodb-_id/</link>
      <pubDate>Thu, 13 Sep 2018 23:01:18 +0700</pubDate>
      
      <guid>https://blog.kevsecurity.org/post/matesctf-final-2-brute-mongodb-_id/</guid>
      <description>EXPLOIT - source  Trong source web có 1 file log ghi lại hành động của bot khi insert dữ liệu vào database. Từ thông tin đấy, có thể dễ dàng đoán là trong database có flag.
2018-08-21 10:48:38.035547 added page 1 2018-08-21 10:48:38.039078 added page 2 2018-08-21 10:48:38.039908 added page 3 2018-08-21 10:48:38.040720 added page 4 2018-08-21 10:48:38.041323 added page 5 2018-08-21 10:48:38.042003 added page 6 2018-08-21 10:48:38.042624 added page 7 2018-08-21 10:48:38.</description>
    </item>
    
    <item>
      <title>Meepwn qual round - pycalx 1</title>
      <link>https://blog.kevsecurity.org/post/meepwn_qual_round_web_pycalx_1/</link>
      <pubDate>Tue, 11 Sep 2018 02:38:33 +0700</pubDate>
      
      <guid>https://blog.kevsecurity.org/post/meepwn_qual_round_web_pycalx_1/</guid>
      <description>Thử thách cung cấp cho mình 1 form dữ liệu cùng với sourcecode như sau:
#!/usr/bin/env python import cgi; import sys from html import escape FLAG = open(&amp;#39;/var/www/flag&amp;#39;,&amp;#39;r&amp;#39;).read() OK_200 = &amp;#34;&amp;#34;&amp;#34;Content-type: text/html &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css&amp;#34;&amp;gt; &amp;lt;center&amp;gt; &amp;lt;title&amp;gt;PyCalx&amp;lt;/title&amp;gt; &amp;lt;h1&amp;gt;PyCalx&amp;lt;/h1&amp;gt; &amp;lt;form&amp;gt; &amp;lt;input class=&amp;#34;form-control col-md-4&amp;#34; type=text name=value1 placeholder=&amp;#39;Value 1 (Example: 1 abc)&amp;#39; autofocus/&amp;gt; &amp;lt;input class=&amp;#34;form-control col-md-4&amp;#34; type=text name=op placeholder=&amp;#39;Operator (Example: + - * ** / // == != )&amp;#39; /&amp;gt; &amp;lt;input class=&amp;#34;form-control col-md-4&amp;#34; type=text name=value2 placeholder=&amp;#39;Value 2 (Example: 1 abc)&amp;#39; /&amp;gt; &amp;lt;input class=&amp;#34;form-control col-md-4 btn btn-success&amp;#34; type=submit value=EVAL /&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;a href=&amp;#39;?</description>
    </item>
    
    <item>
      <title>Matesctf final 2 - IP Spoofing to RCE in flask</title>
      <link>https://blog.kevsecurity.org/post/matesctf_final_2_web_ex50_rce/</link>
      <pubDate>Sat, 08 Sep 2018 09:46:55 +0700</pubDate>
      
      <guid>https://blog.kevsecurity.org/post/matesctf_final_2_web_ex50_rce/</guid>
      <description>EXPLOIT - source  Sau khoảng thời gian dài nghiên cứu và nhờ sự gợi ý hết sức nhiệt tình từ tác giả tôi đã có thể exploit được lỗi được tác giả cho là khó phát hiện nhất. Chuẩn luôn, là rất khó phát hiện vì code lỗi ở tận trong lib của flask.
Đầu tiên, khi truy cập vào trang đăng nhập tác giả có gợi ý cho mọi người biết là app có handle real ip của client.</description>
    </item>
    
    <item>
      <title>Matesctf final 2 - SSTI</title>
      <link>https://blog.kevsecurity.org/post/matesctf_final_2_web_ex50_ssti/</link>
      <pubDate>Sat, 08 Sep 2018 09:46:55 +0700</pubDate>
      
      <guid>https://blog.kevsecurity.org/post/matesctf_final_2_web_ex50_ssti/</guid>
      <description>EXPLOIT - source  Matesctf final được tổ chức theo dạng attack/defense. Cụ thể tác giả sẽ build web service trên server của mình, tức là cho source. Từng đội sẽ nghiên cứu lổ hổng trên server mình và exploit server đội khác để lấy flag.
Có một lỗi trong bài web 1 là tài khoản của bot-check của BTC được gán mặc định và đội nào cũng như nhau admin:1.</description>
    </item>
    
    <item>
      <title>Matesctf final 2 - XXE Injection</title>
      <link>https://blog.kevsecurity.org/post/matesctf_final_2_web_ex50_xxe/</link>
      <pubDate>Sat, 08 Sep 2018 09:46:55 +0700</pubDate>
      
      <guid>https://blog.kevsecurity.org/post/matesctf_final_2_web_ex50_xxe/</guid>
      <description>EXPLOIT - source  Mình nhận thấy lỗi này đầu tiên, mình tưởng đây là LFI cơ, vì cho mình đọc nội dung của cái gì đó (trên hình) và download file nữa. python-docx is a Python library for creating and updating Microsoft Word (.docx) files.  Docx là thư viện sử dụng để xử lý file word. Cũng dễ hiểu đây là lỗi vì không cớ gì mà tác giả lại xử lý file word ở đây cả, chức năng upload và hiển thị nội dung file bình thường thì tại sao lại xử lý file docx làm gì.</description>
    </item>
    
  </channel>
</rss>
